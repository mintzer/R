[["ggplot.html", " 8 - ggplot", "  8 - ggplot  ggplot2      # install the library ggplot2 if it is not already installed if (!require(&quot;ggplot2&quot;)) install.packages(&quot;ggplot2&quot;) # load the library ggplot2 library(&quot;ggplot2&quot;)    songs.csv  1: QQplot       (    ) if (!require(&quot;ggplot2&quot;)) install.packages(&#39;ggplot2&#39;) # for data visualization if (!require(&quot;tidyverse&quot;)) install.packages(&#39;tidyverse&#39;) # dealing with dataframes if (!require(&quot;tidylog&quot;)) install.packages(&#39;tidylog&#39;) # logs for tidyverse if (!require(&quot;plotrix&quot;)) install.packages(&#39;plotrix&#39;) # for the standard error function songsDataset &lt;- read.csv(&#39;songs.csv&#39;) # read the dataset CSV file songsDataset &lt;- na.omit(songsDataset) # to remove NA values if there are (makes no change) # new categorical column &quot;explicit_text&quot; to translate the binary column &quot;explicit&quot; songsDataset &lt;- songsDataset %&gt;% mutate(explicit_text = case_when( explicit == 0 ~ &quot;Implicit&quot;, explicit == 1 ~ &quot;Explicit&quot;, )) # summary table that holds descriptive statistics about the variable popularity: # mean, sample size, standard deviation, standard error of the sample and median # for both groups - Explicit songs and Implicit songs stats_popularity_per_type &lt;- songsDataset %&gt;% group_by(explicit_text) %&gt;% summarise(popularity_mean = mean(popularity), n=n(), std = sd(popularity), sterr = std.error(popularity), median = median(popularity)) # simultanious qqplot for the variable popularity in both Implicit &amp; Explicit songs ggplot(songsDataset) + geom_qq(aes(sample = popularity, color=explicit_text), size=1) + geom_qq_line(aes(sample = popularity)) + facet_wrap(~explicit_text, ncol = 6, shrink = TRUE) + guides(color=&#39;none&#39;) + labs(x=&#39;Theoretical Z score&#39;, y=&#39;Popularity&#39;, title = &#39;QQplot for the variable popularity in both Implicit &amp; Explicit songs&#39;, subtitle = &#39;To check the noramality assumption on each group&#39;) + theme(plot.title = element_text(color=&quot;grey20&quot;,size=14, face=&quot;bold.italic&quot;), plot.subtitle = element_text(color=&quot;grey20&quot;, face=&quot;italic&quot;))  2:     t    +   ggplot(songsDataset, aes(x=popularity, fill = explicit_text)) + geom_density(alpha=0.5) + geom_vline(data = stats_popularity_per_type, aes(xintercept = popularity_mean), linetype=&quot;dashed&quot;) + geom_text(data = stats_popularity_per_type, aes(x = 87.5, y = 0.03, label = paste(&#39;N:&#39;, n), color = explicit_text), size = 4) + geom_text(data = stats_popularity_per_type, aes(x = 87.5, y = 0.025, label = paste(&#39;Mean:&#39;,round(popularity_mean,2)), color = explicit_text), size = 4) + geom_text(data = stats_popularity_per_type, aes(x = 87.5, y = 0.02, label = paste(&#39;Median:&#39;,round(median,2)), color = explicit_text), size = 4) + geom_text(data = stats_popularity_per_type, aes(x = 87.5, y = 0.015, label = paste(&#39;Std:&#39;,round(std,2)), color = explicit_text), size = 4) + geom_text(data = stats_popularity_per_type, aes(x = 87.5, y = 0.01, label = paste(&#39;Sterr:&#39;,round(sterr,2)), color = explicit_text), size = 4) + facet_wrap(~explicit_text, ncol=1) + guides(color=&#39;none&#39;, fill=&#39;none&#39;) + scale_fill_manual(values = c(&#39;cornflowerblue&#39;, &#39;darkgoldenrod&#39;)) + scale_color_manual(values = c(&#39;cornflowerblue&#39;, &#39;darkgoldenrod&#39;)) + labs(title = &#39;Is there a difference in popularity between Explicit and Implicit songs?&#39;, subtitle = &#39;each vertical line represents the sample mean&#39;, y=&#39;Density&#39;,x=&#39;Popularity grade&#39;) + theme(plot.title = element_text(color=&quot;grey25&quot;,size=13.5, face=&quot;bold.italic&quot;), plot.subtitle = element_text(color=&quot;grey25&quot;, face=&quot;italic&quot;))  3: QQplot        (11    ) # extract the year, century and decade songsDataset = songsDataset %&gt;% # extract only the 4 digits represents the year - 1996, 1956, 1977 etc mutate(release_year = str_extract_all(release_date, &quot;\\\\d{4}&quot;)) %&gt;% # 1900s, 2000s mutate(release_century = paste(substr(release_year,1,2), &#39;00s&#39;, sep=&#39;&#39;)) %&gt;% # 1920s, 1950s, 2010s, etc mutate(release_decade = paste(substr(release_year,1,3), &#39;0s&#39;, sep=&#39;&#39;)) %&gt;% # make sure the data is OK. songs should be from 1922 to 2021 filter(release_year &gt;= 1922 &amp; release_year &lt;= 2021) # summary table that holds descriptive statistics about the variable tempo: # mean, sample size, standard deviation, standard error of the sample and median # for all decades - from 1920s to 2020s stats_relase_decade_and_tempo = songsDataset %&gt;% group_by(release_decade) %&gt;% summarise(tempo_mean = round(mean(tempo),2), n=n(), std = round(sd(tempo),2), sterr = round(std.error(tempo),3), median = round(median(tempo),2)) %&gt;% # order the stats table by the decade arrange(release_decade) # simultaneous qqplot for the variable tempo in all decades ggplot(songsDataset) + # it takes some time to run... a lot of data to process geom_qq(aes(sample = tempo, color=release_decade), size=0.5) + geom_qq_line(aes(sample = tempo)) + facet_wrap(~release_decade, ncol = 6, shrink = TRUE) + guides(color=&#39;none&#39;) + labs(x=&#39;Theoretical Z score&#39;, y=&#39;Tempo&#39;, title = &#39;QQplot for the variable tempo in all decades&#39;, subtitle = &#39;To check the noramality assumption on each group&#39;) + theme(#aspect.ratio=1, plot.title = element_text(color=&quot;grey20&quot;,size=14, face=&quot;bold.italic&quot;), plot.subtitle = element_text(color=&quot;grey20&quot;, face=&quot;italic&quot;))  4:         11  +   ggplot(songsDataset, aes(x=tempo, fill=release_decade)) + geom_density(alpha = 0.5) + facet_wrap(~release_decade, ncol = 3,shrink = TRUE, dir=&quot;v&quot;) + geom_vline(data = stats_relase_decade_and_tempo, aes(xintercept = tempo_mean), linetype=&quot;dashed&quot;) + geom_text(data = stats_relase_decade_and_tempo, aes(x = 200, y = 0.015, label = paste(&#39;Mean:&#39;,round(tempo_mean,2)), color = release_decade), size = 2.8) + geom_text(data = stats_relase_decade_and_tempo, aes(x = 200, y = 0.011, label = paste(&#39;Median:&#39;,round(median,2)), color = release_decade), size = 2.8) + geom_text(data = stats_relase_decade_and_tempo, aes(x = 200, y = 0.007, label = paste(&#39;sd:&#39;,round(std,2)), color = release_decade), size = 2.8) + labs(x = &#39;Tempo&#39;, y=&#39;Density&#39;, title = &#39;Density distribuition of Tempo by Decade&#39;, subtitle = &#39;each vertical line represents the sample mean&#39;) + guides(color=&#39;none&#39;, fill=&#39;none&#39;) + theme(plot.title = element_text(color=&quot;grey20&quot;,size=14, face=&quot;bold.italic&quot;), plot.subtitle = element_text(color=&quot;grey20&quot;, face=&quot;italic&quot;)) "]]
